apiVersion: batch/v1
kind: CronJob
metadata:
  {{ if $.Values.job.id }}
  name: {{ $.Release.Name }}-{{ $.Values.job.id }}
  {{ else if $.Values.job.idAutoGenerate }}
  name: {{ $.Release.Name }}-{{ lower (randAlphaNum 5) }}
  {{ else }}
  name: {{ $.Release.Name }}
  {{ end }}
  labels:
    helm.sh/chart-name: {{ $.Chart.Name }}
    helm.sh/chart-version: {{ $.Chart.Version }}
    app.kubernetes.io/name: {{ $.Release.Name }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  annotations:
    metadata/deployed-by: {{ $.Values.metadata.deployedBy | quote }}
    metadata/pipeline-url: {{ $.Values.metadata.pipelineUrl | quote }}
spec:
  schedule: {{ $.Values.cron.schedule | quote }}
  failedJobsHistoryLimit: {{ $.Values.cron.failedJobsHistoryLimit }}
  successfulJobsHistoryLimit: {{ $.Values.cron.successfulJobsHistoryLimit }}
  concurrencyPolicy: {{ $.Values.cron.concurrencyPolicy }}
  {{ if $.Values.cron.startingDeadlineSeconds }}
  startingDeadlineSeconds: {{ $.Values.cron.startingDeadlineSeconds }}
  {{ end }}
  jobTemplate:
    spec:
      completions: {{ $.Values.job.completions }}
      backoffLimit: {{ $.Values.job.backoffLimit }}
      parallelism: {{ $.Values.job.parallelism }}
      {{ if $.Values.job.ttlSecondsAfterFinished }}
      ttlSecondsAfterFinished: {{ $.Values.job.ttlSecondsAfterFinished }}
      {{ end }}
      {{ if $.Values.job.activeDeadlineSeconds }}
      activeDeadlineSeconds: {{ $.Values.job.activeDeadlineSeconds }}
      {{ end }}
      suspend: {{ $.Values.job.suspend }}
      template:
        metadata:
          labels:
            app.kubernetes.io/chart-name: {{ $.Chart.Name }}
            app.kubernetes.io/release-name: {{ $.Release.Name }}
            app.metadata.io/version: {{ $.Chart.AppVersion | default $.Values.image.tag | trunc 63 }}
            {{- if $.Values.podLabels }}
            {{- include "common.tplvalues.render" (dict "value" $.Values.podLabels "context" $) | nindent 12 }}
            {{- end }}
          annotations:
            imageId: {{ $.Values.image.id | quote }}
            {{- if $.Values.podAnnotations }}
            {{- include "common.tplvalues.render" (dict "value" $.Values.podAnnotations "context" $) | nindent 12 }}
            {{- end }}
        spec:
          {{- if $.Values.image.pullSecrets }}
          imagePullSecrets: {{ toYaml $.Values.image.pullSecrets | nindent 10 }}
          {{- end }}
          {{- if $.Values.podSecurityContext.enabled }}
          securityContext: {{- omit $.Values.podSecurityContext "enabled" | toYaml | nindent 14 }}
          {{- end }}
          terminationGracePeriodSeconds: {{ $.Values.terminationGracePeriodSeconds }}
          restartPolicy: {{ $.Values.restartPolicy }}
          initContainers:
            {{- range $job := $.Values.initApplication }}
            - name: {{ $job.name | quote }}
              image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
              imagePullPolicy: {{ $.Values.image.pullPolicy }}

              command: {{- include "common.cmd" (dict "value" $job.command "context" $) | nindent 16 }}
              args:{{- include "common.cmd" (dict "value" $job.args "context" $) | nindent 16 }}

              envFrom: {{- include "common.containerEnvVarsSecrets" (dict "value" $.Values.extraEnvVarsSecrets "context" $) | nindent 16 }}
              env: {{- include "common.containerEnvVars" (dict "value" $.Values.extraEnvVars "context" $) | nindent 16 }}

              {{- if $job.resources }}
              resources: {{ toYaml $job.resources | nindent 16 }}
              {{- end }}
            {{- end }}
            {{- if $.Values.initContainers }}
            {{- include "common.tplvalues.render" ( dict "value" $.Values.initContainers "context" $) | nindent 12 }}
            {{- end }}
          containers:
            - name: {{ $.Values.job.name }}
              image: "{{ $.Values.image.registry }}/{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
              imagePullPolicy: {{ $.Values.image.pullPolicy }}
              

              {{- if $.Values.diagnosticMode.enabled }}
              command: {{- include "common.cmd" (dict "value" $.Values.diagnosticMode.command "context" $) | nindent 16 }}
              {{- else if $.Values.job.command }}
              command: {{- include "common.cmd" (dict "value" $.Values.job.command "context" $) | nindent 16 }}
              {{- end }}

              {{- if $.Values.diagnosticMode.enabled }}
              args: {{- include "common.cmd" (dict "value" $.Values.diagnosticMode.args "context" $) | nindent 16 }}
              {{- else if $.Values.job.arguments }}
              args: {{- include "common.cmd" (dict "value" $.Values.job.arguments "context" $) | nindent 16 }}
              {{- end }}

              envFrom: {{- include "common.containerEnvVarsSecrets" (dict "value" $.Values.extraEnvVarsSecrets "context" $) | nindent 16 }}
              env: {{- include "common.containerEnvVars" (dict "value" $.Values.extraEnvVars "context" $) | nindent 16 }}

              {{- if $.Values.resources.enabled }}
              resources: {{- omit $.Values.resources "enabled" | toYaml | nindent 14 }}
              {{- end }}
              {{- if $.Values.containerSecurityContext.enabled }}
              securityContext: {{- omit $.Values.containerSecurityContext "enabled" | toYaml | nindent 16 }}
              {{- end }}
              lifecycle:
                preStop:
                  exec:
                    command: {{- include "common.cmd" (dict "value" $.Values.lifecycle.preStop "context" $) | nindent 22 }}

            {{- if $.Values.sidecars }}
            {{- include "common.tplvalues.render" (dict "value" $.Values.sidecars "context" $) | nindent 12 }}
            {{- end }}

