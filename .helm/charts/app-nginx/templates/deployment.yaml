apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}
  labels:
    app.kubernetes.io/name: {{ $.Chart.Name }}
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  annotations:
    metadata/deployed-by: {{ $.Values.metadata.deployedBy | quote }}
    metadata/pipeline-url: {{ $.Values.metadata.pipelineUrl | quote }}
spec:
  replicas: {{ $.Values.replicaCount }}
  strategy: {{- toYaml $.Values.updateStrategy | nindent 4 }}
  selector:
    matchLabels:
      app.kubernetes.io/chart-name: {{ $.Chart.Name }}
      app.kubernetes.io/release-name: {{ $.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ $.Release.Name | trunc 63 | trimSuffix "-" }} # duplicate release name only for work helm-assistant
        app.kubernetes.io/chart-name: {{ $.Chart.Name }}
        app.kubernetes.io/release-name: {{ $.Release.Name | trunc 63 | trimSuffix "-" }}
        app.metadata.io/version: {{ $.Chart.AppVersion | default "nill" | trunc 63 | trimSuffix "-" }}
        {{- if $.Values.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" $.Values.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        imageId: {{ $.Values.image.id | quote }}
        {{- if $.Values.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" $.Values.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      automountServiceAccountToken: false
      {{- if $.Values.podSecurityContext.enabled }}
      securityContext: {{- omit $.Values.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if $.Values.image.pullSecrets }}
      imagePullSecrets: {{ toYaml $.Values.image.pullSecrets | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 30
      containers:
        - name: nginx
          {{- with $.Values.image }}
          image: "{{- if .registry -}}{{ .registry }}/{{ .repository }}{{ else }}{{ .repository }}{{- end -}}:{{ .tag }}{{- if (.digest) -}} @{{.digest}} {{- end -}}"
          {{- end }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}

          envFrom: {{- include "common.containerEnvVarsSecrets" (dict "value" $.Values.extraEnvVarsSecrets "context" $) | nindent 12 }}
          env: {{- include "common.containerEnvVars" (dict "value" $.Values.extraEnvVars "context" $) | nindent 12 }}

          {{- if $.Values.resources.enabled }}
          resources: {{- omit $.Values.resources "enabled" | toYaml | nindent 12 }}
          {{- end }}

          {{- if and (eq $.Values.containerSecurityContext.enabled true) (eq $.Values.containerSecurityContext.active true) }}
          securityContext: {{- omit $.Values.containerSecurityContext "enabled" "active" | toYaml | nindent 12 }}
          {{- end }}

          volumeMounts:
            - name: {{ $.Release.Name }}-monitoring-conf
              mountPath: /etc/nginx/conf.d/monitoring.conf
              subPath: monitoring.conf
            {{- if $.Values.externalUpstream.enabled }}
            - name: {{ $.Release.Name }}-external-upstream
              mountPath: /etc/nginx/conf.d/0-fpm-upstream.conf
              subPath: fpm-upstream.conf
            {{- end }}
            {{- if $.Values.extraConfig.enabled }}
            - name: {{ $.Release.Name }}-extra-config
              mountPath: /etc/nginx/conf.d/extraConfig.conf
              subPath: extraConfig.conf
            {{- end }}
            {{- if $.Values.extraVhostConfig.enabled }}
            - name: {{ $.Release.Name }}-extra-vhost-config
              mountPath: /etc/nginx/extra/extraVhostConfig.conf
              subPath: extraVHostConfig.conf
            {{- end }}
            {{- if $.Values.extraFilterIp.enabled }}
            - name: {{ $.Release.Name }}-extra-filter-ip
              mountPath: /etc/nginx/extra/extraFilterIp.conf
              subPath: extraFilterIp.conf
            {{- end }}

            {{- if $.Values.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" $.Values.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}

          ports:
            - containerPort: {{ $.Values.containerPorts.http }}
              name: http
              protocol: TCP

          {{- if $.Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              port: 8888
              path: /stub_status
            initialDelaySeconds: {{ $.Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ $.Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ $.Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ $.Values.readinessProbe.failureThreshold }}
            successThreshold: {{ $.Values.readinessProbe.successThreshold }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command:
                  - /usr/sbin/nginx
                  - -s
                  - quit
        {{- if $.Values.metrics.enabled }}
        - name: monitoring
          image: "{{ $.Values.metrics.image.registry }}/{{ $.Values.metrics.image.repository }}:{{ $.Values.metrics.image.tag }}"
          imagePullPolicy: {{ $.Values.metrics.image.pullPolicy }}
          command:
            - "/usr/bin/nginx-prometheus-exporter"
          args:
            - "-nginx.scrape-uri=http://localhost:8080/stub_status"
          resources: {{ toYaml $.Values.metrics.resources | nindent 12 }}
          ports:
            - containerPort: 9113
              name: monitoring
              protocol: TCP
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - -c
                  - echo "Stopping container by k8s...">/proc/1/fd/1 && /bin/kill -SIGTERM 1
        {{- end }}
      volumes:
        - name: {{ $.Release.Name }}-monitoring-conf
          configMap:
            name: {{ $.Release.Name }}-monitoring-conf

        {{- if $.Values.externalUpstream.enabled }}
        - name: {{ $.Release.Name }}-external-upstream
          configMap:
            name: {{ $.Release.Name }}-external-upstream
        {{- end }}
        {{- if $.Values.extraConfig.enabled }}
        - name: {{ $.Release.Name }}-extra-config
          configMap:
            name: {{ $.Release.Name }}-extra-config
        {{- end }}
        {{- if $.Values.extraVhostConfig.enabled }}
        - name: {{ $.Release.Name }}-extra-vhost-config
          configMap:
            name: {{ $.Release.Name }}-extra-vhost-config
        {{- end }}
        {{- if $.Values.extraFilterIp.enabled }}
        - name: {{ $.Release.Name }}-extra-filter-ip
          configMap:
            name: {{ $.Release.Name }}-extra-filter-ip
        {{- end }}


        {{- if $.Values.extraVolumes }}
        {{- include "common.tplvalues.render" ( dict "value" $.Values.extraVolumes "context" $) | nindent 8 }}
        {{- end }}

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/chart-name: {{ $.Chart.Name }}
                    app.kubernetes.io/release-name: {{ $.Release.Name }}
                topologyKey: kubernetes.io/hostname
